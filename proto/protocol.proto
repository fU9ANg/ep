// 登录。/*{{{*/
// CT_Login
message cLogin {
        required int32 type     = 1;
        required string account = 2;
        required string passwd  = 3;
}

// ST_Login
message sLogin {
        optional bool  result           = 2;
        optional bool  enter_classroom  = 3;
        optional int32 student_id       = 1;
        required int32  login_type      = 4;
}

// CT_Logout
message cLogout {
}

// ST_Logout
message sLogout {
        required int32 login_type  = 1; // 说明是哪种类型的客户端退出。
        required int32 id          = 2;
}

// CT_GetFuncList
message cGetFuncList {
}

// ST_GetFuncList
// 返回的是对应权限的功能列表。
message FuncNode {
        required int32  id       = 1;
        required string name     = 2;
        required string res_path = 3;
}

message sGetFuncList {
        repeated FuncNode func_list     = 1;
}

// CT_SetFunc
message cSetFunc {
        required int32 func_type = 1; // 选择功能类型。
}

// ST_SetFunc
message sSetFunc {
        optional bool   result   = 1; // 返回服务器是否设置成功。
}
/*}}}*/

enum classroom_status {
        CS_INVALIED     = 1;
        CS_WAIT         = 2;
        CS_START_CLASS  = 3;
}

// ST_GetClassroomStatus
message sGetClassroomStatus {
        required classroom_status cs = 1 [default=CS_INVALIED];
}

// ST_GetClassroomInfo
message sGetClassroomInfo {
        required int32  class_id        = 1;
        required int32  grade_id        = 2;
}

// CT_GetSchoolAccountList
message cGetSchoolAccountList {
        required int32  school_id       = 1;
}

enum LoginType {
        LT_USER         = 0;
        LT_HEADMASTER   = 1;
        LT_TEACHER      = 2;
        LT_PARENTS      = 3;
        LT_STUDENT      = 4;
        LT_WHITEBOARD   = 5;
        LT_WRITEBOARD   = 6;
};

message AccountNode {
        optional string account   = 1;
        optional LoginType user_type = 2;
}

// ST_GetSchoolAccountList
message sGetSchoolAccountList {
        repeated AccountNode account_list  = 1;
}

// 开始上课。/*{{{*/
// CT_GetGradeList,
message cGetGradeList {
        required int32 content   = 1;
}

// ST_GetGradeList,
message sGetGradeList { // 返回年级列表。
        repeated ClassListNode grade_list = 1;
}

// CT_GetCourseList
message cGetCourseList { // 请求年级对应的课程表。
        required int32 grade_id = 1;
}

enum CourseType {
        CT_INVALID      = 1;
        CT_RELAY        = 2;
        CT_DRAW         = 3;
        CT_FREEDRAW     = 4;
}

message CourseNode {
        required int32  course_id   = 1;
        required string course_name = 2;
        required int32  grade_id    = 3;
        optional int32  language    = 4;
        optional int32  art         = 5;
        optional int32  community   = 6;
        optional int32  health      = 7;
        optional int32  science     = 8;
        required string res_path    = 9;

        required CourseType course_type = 10 [default=CT_INVALID];
        optional string xml_path        = 11;
        required int32  fac             = 12;
        required int32  puzzle          = 13;
        required int32  fream           = 14;
        required int32  voice           = 15;
        required int32  world           = 16;
        required string icon_path       = 17;
}

// ST_GetCourseList
message sGetCourseList { // 返回学校对应的课程表。
        repeated CourseNode course_list = 1;
}

// CT_GetContent,
message cGetContent {
}

// ST_GetContent,
message sGetContent {
        required int32  class_id         = 1;
        required int32  classroom_id     = 2;
        repeated ContentNode course_list = 3;
}

// CT_GetClassList,
message cGetClassList {
        required int32  grade_id        = 1;
}

message ClassListNode {
        required int32  id       = 1;
        required string name     = 2;
        optional string res_path = 3;
}

// ST_GetClassList,
message sGetClassList {
        repeated ClassListNode class_list = 1;
}

// CT_GetClassRoomList
message cGetClassRoomList {
}

// ST_GetClassRoomList
message sGetClassRoomList {
        repeated ClassListNode classroom_list = 1;
}

message ContentNode {
        required int32  course_id       = 1;
        optional string course_xml      = 2;
        required int32  art             = 3;
        required int32  language        = 4;
        required int32  community       = 5;
        required int32  health          = 6;
        required int32  science         = 7;
        required string res_path        = 8;
        required string course_name     = 9;
        required int32  course_type     = 10;
        optional string icon_path       = 11;
}

// CT_SetContent
message cSetContent {
        required int32  class_id         = 1; // 班级ID
        required int32  classroom_id     = 2; // 教室ID
        // 课程列表。
        repeated ContentNode course_list = 3;
        optional int32  grade_id         = 4;
}

// ST_SetContent
message sSetContent {
        optional bool   result          = 1;
        required string msg             = 2;
}

enum courseware_status {
        CS_INVALID      = 1;
        CS_START        = 2;
        CS_OVER         = 3;
}

message CoursewareStatusNode {
        required int32  course_id       = 1;
        optional int32  idx             = 3;
        required courseware_status cs   = 2 [default=CS_INVALID];
}

// CT_Courseware
message sCourseware {
        optional int32  idx             = 3;
        required int32  course_id       = 1;
        required courseware_status cs    = 2 [default=CS_INVALID];
        optional string course_name     = 4;
}

// CT_UpdateCourseware
message UpdateCourseware {
        optional int32  course_id       = 1;
        optional int32  student_id      = 2;
}

message cCourseOver {
        optional int32 idx = 1;
}

// CT_GetCoursewareListStatus
message sGetCoursewareListStatus {
        repeated CoursewareStatusNode course_status_list = 1;
}

//CT_GetClassInfo
message cGetClassInfo {
}

//ST_GetClassInfo
message sGetClassInfo{
        required int32 class_id = 1;
}

//CT_GetWhiteboardInfo
message cGetWhiteboardInfo{
}

enum FuncType {
        FT_INVALID  = 1;
        FT_PERSONAL = 2;
        FT_SCHOOL	= 3;
        FT_FAMILY	= 4;
        FT_FRIEND	= 5;
        FT_OFFICE	= 6;
};

//ST_GetWhiteboardInfo
message sGetWhiteboardInfo{
        required string whiteboard_num_			= 1;
        required string classroom_name_			= 2;
        required int32 classroom_id_				= 3;
        required FuncType functype_				= 4 [default=FT_INVALID];
        required int32 id_						= 5;
        required int32 fd_						= 6;
        required user_status userstatus_		= 7 [default=US_INVALID];
        required string	account_				= 8;
        required string passwd_					= 9;
}

// CT_Display
message cDisplay {
        required int32 idx              = 1;
        required string course_name     = 2;
}

// ST_Display
message sDisplay{
        required int32 idx = 1;
        required string course_name     = 2;
}

// CT_Enlarge
message cEnlarge {
        optional int32  group_id        = 1;
}

// CT_Reduce
message cReduce {
        optional int32  group_id        = 1;
}

// 下课
// CT_ClassOver,
message cClassOver {
}

// ST_ClassOver,
message sClassOver {}

// 早退
message cLeaveEarly {
        required int32  student_id      = 1;
}

// CT_GetStudentList
message cGetStudentList {
        required int32 class_id = 1;
}

message StudentListNode {
        required int32  id              = 1;
        required string name            = 2;
        optional string res_path        = 3;
}

// ST_GetStudentList
message sGetStudentList { // 单个学生简要信息。
        repeated StudentListNode student_list = 1;
}

// CT_GetActiveStudentList,
message cGetActiveStudentList {
        required int32  class_id      = 1;
}

// ST_GetActiveStudentList,
message sGetActiveStudentList {
        repeated int32  student_list = 1;
}

// CT_GetGroupStudentList
message cGetGroupStudentList {
        // repeated int32  student_id      = 1;
        optional int32  group_id        = 1;
}

// ST_GetGroupStudentList
message sGetGroupStudentList {
        required int32  group_id        = 2;
        repeated int32  student_list    = 1;
}

// CT_GetGroupList
message cGetGroupList {
}

// ST_GetGroupList
message sGetGroupList {
        repeated int32 group_list = 1;
}

enum user_status {
        US_INVALID      = 1;
        US_ONLINE       = 2;
        US_OFFLINE      = 3;
}

// ST_UpdateStudentStatus,
message sUpdateStudentStatus { // TODO ：更新用户状态。
        required int32  student_id      = 1;
        required user_status us         = 2 [default=US_INVALID];
        required int32  login_type      = 3;
}

// CT_GetStudentInfo
message cGetStudentInfo {
        required int32  id              = 1;
}

// ST_GetStudentInfo
message sGetStudentInfo {
        required int32  id              = 1;
        required string number          = 2;
        required string name            = 3;
        required string sex             = 4;
        required string race            = 5;
        required string birthday        = 12;
        required string native          = 6;
        required int32  class_id        = 7;
        required string class_name      = 8;
        required int32  grade_id        = 9;
        required string guardian        = 10;
        required string guardian_phone  = 13;
        required string grade_name      = 11;
        required string account         = 14;
        required string address         = 15;
}

// CT_GetTeacherInfo
message cGetTeacherInfo {
        required int32  id              = 1;
}

// ST_GetTeacherInfo
message sGetTeacherInfo {
        required int32  id              = 1;
        required string number          = 2;
        required string name            = 3;
        required string sex             = 4;
        required string race            = 5;
        required string birthday        = 6;
        required string native          = 7;
        required string school_name     = 8;
        required string res_path        = 9;
}

message PeerGroup {
        required int32  student_id      = 1;
}

// CT_SetGroup
message cSetGroup {
        required int32  group_id        = 1;
        required string group_name      = 2;
        repeated PeerGroup student_list = 3;
}

// ST_SetGroup
message sSetGroup {
        required int32  result          = 2;
        required string msg             = 1;
}

// CT_Relay
message cRelay {
}

// ST_Relay
message sRelay {
        required int32  student_id      = 1;
}

/*}}}*/

// 绘本
message bookNode {
        optional int32  book_id         = 1; // key
        optional string book_name       = 2;
        optional int32  book_type       = 3;
        optional int32  auth_id         = 4;
        optional LoginType auth_type       = 5;
}

// CT_GetPublicBooksList
message cGetPublicBooksList {
        optional int32  owner_id        = 1;
        optional string owner_type      = 2;
}

message userNode {
        optional int32  user_id      = 1; // 可以从0开始。
        optional string user_account = 2;
}

message serverInfoNode {
        optional string server_addr = 1;
        optional int32  server_port = 2;
        optional string full_addr   = 3;
}

message bookList {
        repeated bookNode book_list     = 1;
}

message cPublish {
        optional int32  book_type       = 1;
        optional CourseType course_type = 11 [default=CT_INVALID];
        optional string book_name       = 2;
        optional string time            = 3;
        optional int32  belongs         = 4;
        optional int32  art             = 5;
        optional int32  language        = 6;
        optional int32  community       = 7;
        optional int32  health          = 8;
        optional int32  science         = 9;
        optional string res_path        = 10;
}

message cSell {
        optional int32  book_id   = 1;
        optional int32  auth_id   = 2;
        optional string auth_type = 3;
};

message cChangeOwner {
        optional int32  book_id         = 1;
        optional string to_auth_account = 2;
}

message sResult {
        optional bool   result  = 1;
        optional string msg     = 2;
}

message group_node {
        optional int32  group_id = 1;
}

message point {
        optional string pt_x    = 1;
        optional string pt_y    = 2;
}

message PuzzleInfo {
        optional int32  group_id    = 1;
        optional int32  random      = 2;
        optional int32  puzzle_id   = 3;
}

message UpdatePuzzleResult {
        optional int32  group_id  = 1;
        optional int32  pic_id    = 2;
        optional string pt_x      = 3;
        optional string pt_y      = 4;
        optional int32  tag       = 5;
        optional int32  puzzle_id = 6;
}

message UpdateConn {
        optional int32  group_id        = 1;
        optional int32  idx             = 2;
        optional int32  conn_id         = 3;
}

// 绘画
//CT_GetNextStudent
message cGetNextStudent {
        required int32  opt	   = 1;
        required string pos_x      = 2;
        required string pos_y      = 3;
        required int32  student_id = 4;
}

//ST_GetNextStudent
message sGetNextStudent {
        required int32  opt	   = 1;
        required string pos_x      = 2;
        required string pos_y      = 3;
        required int32  student_id = 4;
}

// 同步绘画信息。
// CT_UpdateDrawSet
message cUpdateDrawSet {
        optional bool	facsimile	=1;
        optional bool	puzzle		=2;
        optional bool	frame		=3;
        optional bool	record		=4;
        optional bool	world		=5;
        repeated string paper_name      =6;
        repeated int32  pen_id          =7;
}

// 同步绘画信息。
// CT_UpdateDrawInfo
message cUpdateDrawInfo {
}

// ST_UpdateDrawInfo
message sUpdateDrawInfo {
}

// 同步纸张 只作转发
// CT_UpdateBackground,
message cUpdateBackground {
        required int32  student_id      = 2;
        required int32  paper_id        = 1;
}

// ST_UpdateBackground,
message sUpdateBackground {
        required int32  student_id      = 2;
        required int32  paper_id        = 1;
}

// 同步临摹图片到绘画层
// CT_UpdateCopyIntoPaint,
message cUpdateCopyIntoPaint {
        required int32  student_id      = 8;
        required int32  pic_id          = 1;
        required string pic_res		= 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32 	op_type		= 7;
}

// ST_UpdateCopyIntoPaint,
message sUpdateCopyIntoPaint {
        required int32  student_id      = 8;
        required int32  pic_id          = 1;
        required string pic_res         = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32 	op_type         = 7;
}

message UpdatePenAndEraserNode {
        required int32  student_id      = 10;
        required int32  pen_type        = 1;
        required int32  pen_color       = 2;
        required string pen_size        = 3;
        required int32  pen_trans       = 4;
        required int32  paint_type 	= 5;
        required string pt_x 		= 6;
        required string pt_y		= 7;
        required string prept_x		= 8;
        required string prept_y		= 9;
}

// 同步画笔或橡皮擦
// CT_UpdatePenAnderaser,
message cUpdatePenAnderaser {
        repeated UpdatePenAndEraserNode node = 1;
}

// ST_UpdatePenAnderaser,
message sUpdatePenAnderaser {
        required int32  student_id      = 10;
        required int32  pen_type        = 1;
        required int32  pen_color       = 2;
        required string pen_size        = 3;
        required int32  pen_trans       = 4;
        required int32  paint_type 	= 5;
        required string pt_x 		= 6;
        required string pt_y		= 7;
        required string prept_x		= 8;
        required string prept_y		= 9;
}

// 同步填色。
// CT_UpdateFilling,
message cUpdateFilling {
        required int32  student_id      = 4;
        required string pt_list         = 1;
        required int32  trans           = 3;
        required int32  color           = 2;
}

// ST_UpdateFilling,
message sUpdateFilling {
        required int32  student_id      = 4;
        required string pt_list         = 1;
        required int32  trans           = 3;
        required int32  color           = 2;
}

// 同步印章 TODO
// CT_UpdateStamp,
message cUpdateStamp {
        required int32  student_id      = 4;
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

// ST_UpdateStamp,
message sUpdateStamp {
        required int32  student_id      = 4;
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

/*
// CT_UpdateWord
message cUpdateWord {
required int32  id       = 1;
required string content  = 2;
required int32  size     = 3;
required int32  color    = 4;
required int32  font     = 5;
required int32  effect   = 6;
required string pos_x    = 7;
required string pos_y    = 8;
required string retation = 9;
retation string scale    = 10;
}
 */

// 同步填图
// CT_UpdateFillPic,
message cUpdateFillPic {
        required int32  student_id      = 4;
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}
// ST_UpdateFillPic,
message sUpdateFillPic {
        required int32  student_id      = 4;
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

enum mutex_status {
        MS_INVALID = 3;
        MS_LOCK    = 1;
        MS_UNLOCK  = 2;
}

// 同步锁定。
// CT_UpdateMutex,
message cUpdateMutex {
        required int32  student_id      = 3;
        required mutex_status ms = 1 [default=MS_LOCK];
        required int32 lock_id   = 2;
}

// ST_UpdateMutex,
message sUpdateMutex {
        required int32  student_id      = 3;
        required int32 lock_id  = 2;
        optional int32 result   = 1;
        optional mutex_status ms = 4 [default=MS_LOCK];
}

// 同步屏贴。
// CT_UpdateCollage,
message cUpdateCollage {
        required int32  student_id      = 10;
        required int32  id              = 9;
        required string pic_res         = 1;
        required int32  pic_type        = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32  layer           = 7;
        required int32  op_type		= 8;
}

// ST_UpdateCollage,
message sUpdateCollage {
        required int32  student_id      = 10;
        required int32  id              = 9;
        required string pic_res         = 1;
        required int32  pic_type        = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32  layer           = 7;
        required int32  op_type		= 8;
}

// 同步文字
// CT_UpdateWord,
message cUpdateWord {
        required int32  type     = 12;
        required int32  id       = 1;
        required string content  = 2;
        required int32  size     = 3;
        required int32  color    = 4;
        required int32  font     = 5;
        required int32  effect   = 6;
        required string pos_x    = 7;
        required string pos_y    = 8;
        required string retation = 9;
        required string scale    = 10;
        required int32  student_id      = 11;
}

//同步边框
//	CT_UpdateFrame,
message cUpdateFrame {
        required int32  student_id      =2;
        required int32 	frame_id 	=1;
}
//	ST_UpdateFrame
message sUpdateFrame {
        required int32  student_id      =2;
        required int32 	frame_id 	=1;
}

// CT_GetStudentDrawLog
message cGetStudentDrawLog {
        required int32  student_id      = 1;
}

message tst_book {
        required bookNode book_node     = 1;
};
