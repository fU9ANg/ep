// 登录。/*{{{*/
// CT_Login
message cLogin {
        required int32 type     = 1;
        required string account = 2;
        required string passwd  = 3;
}

// ST_Login
message sLogin {
        optional bool  result           = 2;
        optional bool  enter_classroom  = 3;
        optional int32 student_id       = 1;
}

// CT_Logout
message cLogout {
}

// ST_Logout
message sLogout {
        required int32 login_type  = 1; // 说明是哪种类型的客户端退出。
        required int32 id          = 2;
}

// CT_GetFuncList
message cGetFuncList {
}

// ST_GetFuncList
// 返回的是对应权限的功能列表。
message FuncNode {
        required int32  id       = 1;
        required string name     = 2;
        required string res_path = 3;
}

message sGetFuncList {
        repeated FuncNode func_list     = 1;
}

// CT_SetFunc
message cSetFunc {
        required int32 func_type = 1; // 选择功能类型。
}

// ST_SetFunc
message sSetFunc {
        optional bool   result   = 1; // 返回服务器是否设置成功。
}
/*}}}*/

// 开始上课。/*{{{*/
// CT_GetGradeList,
message cGetGradeList {
        required int32 content   = 1;
}

// ST_GetGradeList,
message sGetGradeList { // 返回年级列表。
        repeated ClassListNode grade_list = 1;
}

// CT_GetCourseList
message cGetCourseList { // 请求年级对应的课程表。
        required int32 grade_id = 1;
}

message CourseNode {
        required int32  course_id   = 1;
        required string course_name = 2;
        required int32  grade_id    = 3;
        optional int32  language    = 4;
        optional int32  art         = 5;
        optional int32  community   = 6;
        optional int32  health      = 7;
        optional int32  science     = 8;
        required string res_path    = 9;

        enum CourseType {
                CT_INVALID      = 1;
                CT_RELAY        = 2;
                CT_DRAW         = 3;
                CT_FREEDRAW     = 4;
        }
        required CourseType course_type = 10 [default=CT_INVALID];
        optional string xml_path        = 11;
}

// ST_GetCourseList
message sGetCourseList { // 返回学校对应的课程表。
        repeated CourseNode course_list = 1;
}

// CT_GetContent,
message cGetContent {
}

// ST_GetContent,
message sGetContent {
        required int32  class_id         = 1;
        required int32  classroom_id     = 2;
        repeated ContentNode course_list = 3;
}

// CT_GetClassList,
message cGetClassList {
        required int32  grade_id        = 1;
}

message ClassListNode {
        required int32  id       = 1;
        required string name     = 2;
        optional string res_path = 3;
}

// ST_GetClassList,
message sGetClassList {
        repeated ClassListNode class_list = 1;
}

// CT_GetClassRoomList
message cGetClassRoomList {
}

// ST_GetClassRoomList
message sGetClassRoomList {
        repeated ClassListNode classroom_list = 1;
}

message ContentNode {
        required int32  course_id       = 1;
        optional string course_xml      = 2;
}

// CT_SetContent
message cSetContent {
        required int32  class_id         = 1; // 班级ID
        required int32  classroom_id     = 2; // 教室ID
        // 课程列表。
        repeated ContentNode course_list = 3;
}

// ST_SetContent
message sSetContent {
        optional bool   result          = 1;
        required string msg             = 2;
}

message sCourseware {
        required int32  course_id       = 1;
}

// 下课
// CT_ClassOver,
message cClassOver {
}

// ST_ClassOver,
message sClassOver {
}

// CT_GetStudentList
message cGetStudentList {
        required int32 class_id = 1;
}

message StudentListNode {
        required int32  id              = 1;
        required string name            = 2;
        optional string res_path        = 3;
}

// ST_GetStudentList
message sGetStudentList { // 单个学生简要信息。
        repeated StudentListNode student_list = 1;
}

// CT_GetActiveStudentList,
message cGetActiveStudentList {
        required int32  class_id      = 1;
}

// ST_GetActiveStudentList,
message sGetActiveStudentList {
        repeated int32  student_list = 1;
}

// ST_UpdateStudentStatus,
message sUpdateStudentStatus {
        required int32  student_id      = 1;
}

// CT_GetStudentInfo
message cGetStudentInfo {
        required int32  id              = 1;
}

// ST_GetStudentInfo
message sGetStudentInfo {
        required int32  id              = 1;
        required string number          = 2;
        required string name            = 3;
        required string sex             = 4;
        required string race            = 5;
        required string native          = 6;
        required int32  class_id        = 7;
        required string class_name      = 8;
}

// CT_GetTeacherInfo
message cGetTeacherInfo {
        required int32  id              = 1;
}

// ST_GetTeacherInfo
message sGetTeacherInfo {
        required int32  id              = 1;
        required string number          = 2;
        required string name            = 3;
        required string sex             = 4;
        required string race            = 5;
        required string birthday        = 6;
        required string native          = 7;
        required string school_name     = 8;
}

message PeerGroup {
        required int32  student_id      = 1;
}

// CT_SetGroup
message cSetGroup {
        required int32  group_id        = 1;
        required string group_name      = 2;
        repeated PeerGroup student_list = 3;
}

// ST_SetGroup
message sSetGroup {
        required int32  result          = 2;
        required string msg             = 1;
}

// CT_Relay
message cRelay {
}

// ST_Relay
message sRelay {
        required int32  student_id      = 1;
}

/*}}}*/

// 绘本
message bookNode {
        required int32  book_id         = 1; // key
        required string book_name       = 2;
        required int32  book_type       = 4;
        required string res_path        = 3;
}

// CT_GetPersonalBooksList,
message cGetPersonalBooksList {
}

// ST_GetPersonalBooksList,
message sGetPersonalBooksList {
        repeated bookNode book_list     = 1;
}

// CT_GetServerAddr
message cGetServerAddr {
}

// ST_GetServerAddr
message sGetServerAddr {
        required string serv_addr       = 1;
}


// CT_GetPublicBooksList,
message cGetPublicBooksList {
}

// ST_GetPublicBooksList,
message sGetPublicBooksList {
        repeated bookNode book_list     = 1;
}

// CT_UploadBook,
message cUploadBook {
        required string book_name       = 1;
        required int32  book_type       = 2;
        required string time            = 3;
        required int32  belongs         = 4; // 所属班，用二进制占位表示。
        required int32  art             = 5;
        required int32  language        = 6;
        required int32  community       = 7;
        required int32  health          = 8;
        required int32  science         = 9;
        required string res_path        = 10;
}
// ST_UploadBook,
message sUploadBook {
        required int32 result            = 2; // 信息保存成功否。
        required string msg             = 1;
}

// 从私人服务器进行下载。
// CT_DownloadFromPersonal,
message cDownloadFromPersonal {
        required int32  book_id         = 1;
}

// ST_DownloadFromPersonal,
message sDownloadFromPersonal {
        optional bool   result          = 1;
        required string down_addr       = 2;
}

// 从公共服务器进行下载。
// CT_DownloadFromPublic,
message cDownloadFromPublic {
        required int32  book_id         = 1;
}

// ST_DownloadFromPublic,
message sDownloadFromPublic {
        optional bool   result          = 2;
        required string down_addr       = 1;
}

// 指定传输。
// CT_TransferBook,
message cTransferBook {
        required int32  book_id         = 1;
        required string account         = 2;
}

// ST_TransferBook,
message sTransferBook {
        required int32   result          = 2;
        required string msg             = 1;
}

// 发布。
// CT_Publish,
message cPublish {
        required int32  book_id         = 1;
}

// ST_Publish,
message sPublish {
        required int32   result          = 2;
        required string msg             = 1;
}
// 绘画

// 同步绘画信息。
// CT_UpdateDrawSet
message cUpdateDrawSet {
        optional bool	facsimile	=1;
        optional bool	puzzle		=2;
        optional bool	frame		=3;
        optional bool	record		=4;
        optional bool	world		=5;
        repeated string paper_name      =6;
        repeated int32  pen_id          =7;
}

// 同步绘画信息。
// CT_UpdateDrawInfo
message cUpdateDrawInfo {
}

// ST_UpdateDrawInfo
message sUpdateDrawInfo {
}

// 同步纸张 只作转发
// CT_UpdateBackground,
message cUpdateBackground {
        required int32  paper_id        = 1;
}

// ST_UpdateBackground,
message sUpdateBackground {
        required int32  paper_id        = 1;
}

// 同步临摹图片到绘画层
// CT_UpdateCopyIntoPaint,
message cUpdateCopyIntoPaint {
        required int32  pic_id          = 1;
        required string pic_res		= 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32 	op_type		= 7;
}

// ST_UpdateCopyIntoPaint,
message sUpdateCopyIntoPaint {
        required int32  pic_id          = 1;
        required string pic_res         = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32 	op_type         = 7;
}

// 同步画笔或橡皮擦
// CT_UpdatePenAnderaser,
message cUpdatePenAnderaser {
        required int32  pen_type        = 1;
        required int32  pen_color       = 2;
        required string pen_size        = 3;
        required int32  pen_trans       = 4;
        required int32  paint_type 	= 5;
        required string pt_x 		= 6;
        required string pt_y		= 7;
        required string prept_x		= 8;
        required string prept_y		= 9;
}

// ST_UpdatePenAnderaser,
message sUpdatePenAnderaser {
        required int32  pen_type        = 1;
        required int32  pen_color       = 2;
        required string pen_size        = 3;
        required int32  pen_trans       = 4;
        required int32  paint_type 	= 5;
        required string pt_x 		= 6;
        required string pt_y		= 7;
        required string prept_x		= 8;
        required string prept_y		= 9;
}

// 同步填色。
// CT_UpdateFilling,
message cUpdateFilling {
        required string pt_list         = 1;
        required int32  trans           = 3;
        required int32  color           = 2;
}

// ST_UpdateFilling,
message sUpdateFilling {
        required string pt_list         = 1;
        required int32  trans           = 3;
        required int32  color           = 2;
}

// 同步印章 TODO
// CT_UpdateStamp,
message cUpdateStamp {
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

// ST_UpdateStamp,
message sUpdateStamp {
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

// 同步填图
// CT_UpdateFillPic,
message cUpdateFillPic {
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}
// ST_UpdateFillPic,
message sUpdateFillPic {
        required string pic_res         = 1;
        required string pt_x            = 2;
        required string pt_y            = 3;
}

// 同步锁定。
// CT_UpdateMutex,
message cUpdateMutex {
        required int32 lock             = 1;
}

// ST_UpdateMutex,
message sUpdateMutex {
        required int32 result            = 1;
}

// 同步屏贴。
// CT_UpdateCollage,
message cUpdateCollage {
        required int32  id              = 9;
        required string pic_res         = 1;
        required int32  pic_type        = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32  layer           = 7;
        required int32  op_type		= 8;
}

// ST_UpdateCollage,
message sUpdateCollage {
        required int32  id              = 9;
        required string pic_res         = 1;
        required int32  pic_type        = 2;
        required string pic_scale       = 3;
        required string pic_rotation    = 4;
        required string pt_x            = 5;
        required string pt_y            = 6;
        required int32  layer           = 7;
        required int32  op_type		= 8;
}

// 同步文字
// CT_UpdateWord,
message cUpdateWord {
        required int32  id              = 9;
        required int32  frame_id        = 1;
        required string msg             = 2;
        required int32  front           = 3;
        required int32  color           = 4;
        required int32  size            = 5;
        required int32  effect_id       = 6;
        required string frame_x         = 7;
        required string frame_y         = 8;
}

// ST_UpdateWord,
message sUpdateWord {
}

//同步边框
//	CT_UpdateFrame,
message cUpdateFrame {
        required int32 	frame_id 	=1;
}
//	ST_UpdateFrame
message sUpdateFrame {
        required int32 	frame_id 	=1;
}
