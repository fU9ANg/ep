// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/system.proto

#ifndef PROTOBUF_proto_2fsystem_2eproto__INCLUDED
#define PROTOBUF_proto_2fsystem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fsystem_2eproto();
void protobuf_AssignDesc_proto_2fsystem_2eproto();
void protobuf_ShutdownFile_proto_2fsystem_2eproto();

class Auth;
class Heart;

// ===================================================================

class Auth : public ::google::protobuf::Message {
 public:
  Auth();
  virtual ~Auth();

  Auth(const Auth& from);

  inline Auth& operator=(const Auth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Auth& default_instance();

  void Swap(Auth* other);

  // implements Message ----------------------------------------------

  Auth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Auth& from);
  void MergeFrom(const Auth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 auth_id = 1;
  inline bool has_auth_id() const;
  inline void clear_auth_id();
  static const int kAuthIdFieldNumber = 1;
  inline ::google::protobuf::int32 auth_id() const;
  inline void set_auth_id(::google::protobuf::int32 value);

  // required string auth_msg = 2;
  inline bool has_auth_msg() const;
  inline void clear_auth_msg();
  static const int kAuthMsgFieldNumber = 2;
  inline const ::std::string& auth_msg() const;
  inline void set_auth_msg(const ::std::string& value);
  inline void set_auth_msg(const char* value);
  inline void set_auth_msg(const char* value, size_t size);
  inline ::std::string* mutable_auth_msg();
  inline ::std::string* release_auth_msg();
  inline void set_allocated_auth_msg(::std::string* auth_msg);

  // required bool is_auth = 3;
  inline bool has_is_auth() const;
  inline void clear_is_auth();
  static const int kIsAuthFieldNumber = 3;
  inline bool is_auth() const;
  inline void set_is_auth(bool value);

  // @@protoc_insertion_point(class_scope:Auth)
 private:
  inline void set_has_auth_id();
  inline void clear_has_auth_id();
  inline void set_has_auth_msg();
  inline void clear_has_auth_msg();
  inline void set_has_is_auth();
  inline void clear_has_is_auth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* auth_msg_;
  ::google::protobuf::int32 auth_id_;
  bool is_auth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fsystem_2eproto();
  friend void protobuf_AssignDesc_proto_2fsystem_2eproto();
  friend void protobuf_ShutdownFile_proto_2fsystem_2eproto();

  void InitAsDefaultInstance();
  static Auth* default_instance_;
};
// -------------------------------------------------------------------

class Heart : public ::google::protobuf::Message {
 public:
  Heart();
  virtual ~Heart();

  Heart(const Heart& from);

  inline Heart& operator=(const Heart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Heart& default_instance();

  void Swap(Heart* other);

  // implements Message ----------------------------------------------

  Heart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Heart& from);
  void MergeFrom(const Heart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Heart)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_proto_2fsystem_2eproto();
  friend void protobuf_AssignDesc_proto_2fsystem_2eproto();
  friend void protobuf_ShutdownFile_proto_2fsystem_2eproto();

  void InitAsDefaultInstance();
  static Heart* default_instance_;
};
// ===================================================================


// ===================================================================

// Auth

// required int32 auth_id = 1;
inline bool Auth::has_auth_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Auth::set_has_auth_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Auth::clear_has_auth_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Auth::clear_auth_id() {
  auth_id_ = 0;
  clear_has_auth_id();
}
inline ::google::protobuf::int32 Auth::auth_id() const {
  return auth_id_;
}
inline void Auth::set_auth_id(::google::protobuf::int32 value) {
  set_has_auth_id();
  auth_id_ = value;
}

// required string auth_msg = 2;
inline bool Auth::has_auth_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Auth::set_has_auth_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Auth::clear_has_auth_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Auth::clear_auth_msg() {
  if (auth_msg_ != &::google::protobuf::internal::kEmptyString) {
    auth_msg_->clear();
  }
  clear_has_auth_msg();
}
inline const ::std::string& Auth::auth_msg() const {
  return *auth_msg_;
}
inline void Auth::set_auth_msg(const ::std::string& value) {
  set_has_auth_msg();
  if (auth_msg_ == &::google::protobuf::internal::kEmptyString) {
    auth_msg_ = new ::std::string;
  }
  auth_msg_->assign(value);
}
inline void Auth::set_auth_msg(const char* value) {
  set_has_auth_msg();
  if (auth_msg_ == &::google::protobuf::internal::kEmptyString) {
    auth_msg_ = new ::std::string;
  }
  auth_msg_->assign(value);
}
inline void Auth::set_auth_msg(const char* value, size_t size) {
  set_has_auth_msg();
  if (auth_msg_ == &::google::protobuf::internal::kEmptyString) {
    auth_msg_ = new ::std::string;
  }
  auth_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Auth::mutable_auth_msg() {
  set_has_auth_msg();
  if (auth_msg_ == &::google::protobuf::internal::kEmptyString) {
    auth_msg_ = new ::std::string;
  }
  return auth_msg_;
}
inline ::std::string* Auth::release_auth_msg() {
  clear_has_auth_msg();
  if (auth_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = auth_msg_;
    auth_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Auth::set_allocated_auth_msg(::std::string* auth_msg) {
  if (auth_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete auth_msg_;
  }
  if (auth_msg) {
    set_has_auth_msg();
    auth_msg_ = auth_msg;
  } else {
    clear_has_auth_msg();
    auth_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool is_auth = 3;
inline bool Auth::has_is_auth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Auth::set_has_is_auth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Auth::clear_has_is_auth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Auth::clear_is_auth() {
  is_auth_ = false;
  clear_has_is_auth();
}
inline bool Auth::is_auth() const {
  return is_auth_;
}
inline void Auth::set_is_auth(bool value) {
  set_has_is_auth();
  is_auth_ = value;
}

// -------------------------------------------------------------------

// Heart


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fsystem_2eproto__INCLUDED
