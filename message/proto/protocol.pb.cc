// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* cLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* sLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* cLogout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cLogout_reflection_ = NULL;
const ::google::protobuf::Descriptor* sLogout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sLogout_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetFuncList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetFuncList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetFuncList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetFuncList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cSetFunc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cSetFunc_reflection_ = NULL;
const ::google::protobuf::Descriptor* sSetFunc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sSetFunc_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetGradeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetGradeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetGradeList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetGradeList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetCourseList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetCourseList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetCourseList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetCourseList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetClassList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetClassList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetClassList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetClassList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetClassRoomList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetClassRoomList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetClassRoomList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetClassRoomList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cSetContent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cSetContent_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetStudentList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetStudentList_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetStudentList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetStudentList_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetStudentInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetStudentInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetStudentInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetStudentInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* cGetTeacherInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cGetTeacherInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* sGetTeacherInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sGetTeacherInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2fprotocol_2eproto() {
  protobuf_AddDesc_proto_2fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/protocol.proto");
  GOOGLE_CHECK(file != NULL);
  cLogin_descriptor_ = file->message_type(0);
  static const int cLogin_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogin, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogin, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogin, passwd_),
  };
  cLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cLogin_descriptor_,
      cLogin::default_instance_,
      cLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cLogin));
  sLogin_descriptor_ = file->message_type(1);
  static const int sLogin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogin, result_),
  };
  sLogin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sLogin_descriptor_,
      sLogin::default_instance_,
      sLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sLogin));
  cLogout_descriptor_ = file->message_type(2);
  static const int cLogout_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogout, common_),
  };
  cLogout_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cLogout_descriptor_,
      cLogout::default_instance_,
      cLogout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogout, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cLogout, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cLogout));
  sLogout_descriptor_ = file->message_type(3);
  static const int sLogout_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogout, common_),
  };
  sLogout_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sLogout_descriptor_,
      sLogout::default_instance_,
      sLogout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogout, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sLogout, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sLogout));
  cGetFuncList_descriptor_ = file->message_type(4);
  static const int cGetFuncList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetFuncList, content_),
  };
  cGetFuncList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetFuncList_descriptor_,
      cGetFuncList::default_instance_,
      cGetFuncList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetFuncList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetFuncList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetFuncList));
  sGetFuncList_descriptor_ = file->message_type(5);
  static const int sGetFuncList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetFuncList, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetFuncList, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetFuncList, res_path_),
  };
  sGetFuncList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetFuncList_descriptor_,
      sGetFuncList::default_instance_,
      sGetFuncList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetFuncList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetFuncList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetFuncList));
  cSetFunc_descriptor_ = file->message_type(6);
  static const int cSetFunc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetFunc, funcid_),
  };
  cSetFunc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cSetFunc_descriptor_,
      cSetFunc::default_instance_,
      cSetFunc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetFunc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetFunc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cSetFunc));
  sSetFunc_descriptor_ = file->message_type(7);
  static const int sSetFunc_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sSetFunc, status_),
  };
  sSetFunc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sSetFunc_descriptor_,
      sSetFunc::default_instance_,
      sSetFunc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sSetFunc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sSetFunc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sSetFunc));
  cGetGradeList_descriptor_ = file->message_type(8);
  static const int cGetGradeList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetGradeList, content_),
  };
  cGetGradeList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetGradeList_descriptor_,
      cGetGradeList::default_instance_,
      cGetGradeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetGradeList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetGradeList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetGradeList));
  sGetGradeList_descriptor_ = file->message_type(9);
  static const int sGetGradeList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetGradeList, grade_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetGradeList, grade_name_),
  };
  sGetGradeList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetGradeList_descriptor_,
      sGetGradeList::default_instance_,
      sGetGradeList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetGradeList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetGradeList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetGradeList));
  cGetCourseList_descriptor_ = file->message_type(10);
  static const int cGetCourseList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetCourseList, grade_id_),
  };
  cGetCourseList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetCourseList_descriptor_,
      cGetCourseList::default_instance_,
      cGetCourseList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetCourseList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetCourseList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetCourseList));
  sGetCourseList_descriptor_ = file->message_type(11);
  static const int sGetCourseList_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, course_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, course_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, art_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, community_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, health_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, science_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, res_path_),
  };
  sGetCourseList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetCourseList_descriptor_,
      sGetCourseList::default_instance_,
      sGetCourseList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetCourseList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetCourseList));
  cGetClassList_descriptor_ = file->message_type(12);
  static const int cGetClassList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassList, grade_id_),
  };
  cGetClassList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetClassList_descriptor_,
      cGetClassList::default_instance_,
      cGetClassList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetClassList));
  sGetClassList_descriptor_ = file->message_type(13);
  static const int sGetClassList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassList, class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassList, class_name_),
  };
  sGetClassList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetClassList_descriptor_,
      sGetClassList::default_instance_,
      sGetClassList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetClassList));
  cGetClassRoomList_descriptor_ = file->message_type(14);
  static const int cGetClassRoomList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassRoomList, content_),
  };
  cGetClassRoomList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetClassRoomList_descriptor_,
      cGetClassRoomList::default_instance_,
      cGetClassRoomList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassRoomList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetClassRoomList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetClassRoomList));
  sGetClassRoomList_descriptor_ = file->message_type(15);
  static const int sGetClassRoomList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassRoomList, classroom_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassRoomList, classroom_name_),
  };
  sGetClassRoomList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetClassRoomList_descriptor_,
      sGetClassRoomList::default_instance_,
      sGetClassRoomList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassRoomList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetClassRoomList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetClassRoomList));
  cSetContent_descriptor_ = file->message_type(16);
  static const int cSetContent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetContent, classid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetContent, classroomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetContent, courselist_),
  };
  cSetContent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cSetContent_descriptor_,
      cSetContent::default_instance_,
      cSetContent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetContent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cSetContent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cSetContent));
  cGetStudentList_descriptor_ = file->message_type(17);
  static const int cGetStudentList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentList, content_),
  };
  cGetStudentList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetStudentList_descriptor_,
      cGetStudentList::default_instance_,
      cGetStudentList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetStudentList));
  sGetStudentList_descriptor_ = file->message_type(18);
  static const int sGetStudentList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentList, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentList, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentList, respath_),
  };
  sGetStudentList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetStudentList_descriptor_,
      sGetStudentList::default_instance_,
      sGetStudentList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetStudentList));
  cGetStudentInfo_descriptor_ = file->message_type(19);
  static const int cGetStudentInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentInfo, id_),
  };
  cGetStudentInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetStudentInfo_descriptor_,
      cGetStudentInfo::default_instance_,
      cGetStudentInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetStudentInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetStudentInfo));
  sGetStudentInfo_descriptor_ = file->message_type(20);
  static const int sGetStudentInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, race_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, native_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, class_name_),
  };
  sGetStudentInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetStudentInfo_descriptor_,
      sGetStudentInfo::default_instance_,
      sGetStudentInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetStudentInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetStudentInfo));
  cGetTeacherInfo_descriptor_ = file->message_type(21);
  static const int cGetTeacherInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetTeacherInfo, id_),
  };
  cGetTeacherInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cGetTeacherInfo_descriptor_,
      cGetTeacherInfo::default_instance_,
      cGetTeacherInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetTeacherInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cGetTeacherInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cGetTeacherInfo));
  sGetTeacherInfo_descriptor_ = file->message_type(22);
  static const int sGetTeacherInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, race_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, native_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, school_name_),
  };
  sGetTeacherInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sGetTeacherInfo_descriptor_,
      sGetTeacherInfo::default_instance_,
      sGetTeacherInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sGetTeacherInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sGetTeacherInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cLogin_descriptor_, &cLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sLogin_descriptor_, &sLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cLogout_descriptor_, &cLogout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sLogout_descriptor_, &sLogout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetFuncList_descriptor_, &cGetFuncList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetFuncList_descriptor_, &sGetFuncList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cSetFunc_descriptor_, &cSetFunc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sSetFunc_descriptor_, &sSetFunc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetGradeList_descriptor_, &cGetGradeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetGradeList_descriptor_, &sGetGradeList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetCourseList_descriptor_, &cGetCourseList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetCourseList_descriptor_, &sGetCourseList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetClassList_descriptor_, &cGetClassList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetClassList_descriptor_, &sGetClassList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetClassRoomList_descriptor_, &cGetClassRoomList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetClassRoomList_descriptor_, &sGetClassRoomList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cSetContent_descriptor_, &cSetContent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetStudentList_descriptor_, &cGetStudentList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetStudentList_descriptor_, &sGetStudentList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetStudentInfo_descriptor_, &cGetStudentInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetStudentInfo_descriptor_, &sGetStudentInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cGetTeacherInfo_descriptor_, &cGetTeacherInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sGetTeacherInfo_descriptor_, &sGetTeacherInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2fprotocol_2eproto() {
  delete cLogin::default_instance_;
  delete cLogin_reflection_;
  delete sLogin::default_instance_;
  delete sLogin_reflection_;
  delete cLogout::default_instance_;
  delete cLogout_reflection_;
  delete sLogout::default_instance_;
  delete sLogout_reflection_;
  delete cGetFuncList::default_instance_;
  delete cGetFuncList_reflection_;
  delete sGetFuncList::default_instance_;
  delete sGetFuncList_reflection_;
  delete cSetFunc::default_instance_;
  delete cSetFunc_reflection_;
  delete sSetFunc::default_instance_;
  delete sSetFunc_reflection_;
  delete cGetGradeList::default_instance_;
  delete cGetGradeList_reflection_;
  delete sGetGradeList::default_instance_;
  delete sGetGradeList_reflection_;
  delete cGetCourseList::default_instance_;
  delete cGetCourseList_reflection_;
  delete sGetCourseList::default_instance_;
  delete sGetCourseList_reflection_;
  delete cGetClassList::default_instance_;
  delete cGetClassList_reflection_;
  delete sGetClassList::default_instance_;
  delete sGetClassList_reflection_;
  delete cGetClassRoomList::default_instance_;
  delete cGetClassRoomList_reflection_;
  delete sGetClassRoomList::default_instance_;
  delete sGetClassRoomList_reflection_;
  delete cSetContent::default_instance_;
  delete cSetContent_reflection_;
  delete cGetStudentList::default_instance_;
  delete cGetStudentList_reflection_;
  delete sGetStudentList::default_instance_;
  delete sGetStudentList_reflection_;
  delete cGetStudentInfo::default_instance_;
  delete cGetStudentInfo_reflection_;
  delete sGetStudentInfo::default_instance_;
  delete sGetStudentInfo_reflection_;
  delete cGetTeacherInfo::default_instance_;
  delete cGetTeacherInfo_reflection_;
  delete sGetTeacherInfo::default_instance_;
  delete sGetTeacherInfo_reflection_;
}

void protobuf_AddDesc_proto_2fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024proto/protocol.proto\"7\n\006cLogin\022\014\n\004type"
    "\030\001 \002(\005\022\017\n\007account\030\002 \002(\t\022\016\n\006passwd\030\003 \002(\t\""
    "\030\n\006sLogin\022\016\n\006result\030\001 \002(\010\"\031\n\007cLogout\022\016\n\006"
    "common\030\001 \002(\005\"\031\n\007sLogout\022\016\n\006common\030\001 \002(\005\""
    "\037\n\014cGetFuncList\022\017\n\007content\030\001 \002(\t\":\n\014sGet"
    "FuncList\022\n\n\002id\030\003 \002(\005\022\014\n\004name\030\001 \002(\t\022\020\n\010re"
    "s_path\030\002 \002(\t\"\032\n\010cSetFunc\022\016\n\006funcId\030\001 \002(\005"
    "\"\032\n\010sSetFunc\022\016\n\006status\030\001 \002(\005\" \n\rcGetGrad"
    "eList\022\017\n\007content\030\001 \002(\005\"5\n\rsGetGradeList\022"
    "\020\n\010grade_id\030\001 \002(\005\022\022\n\ngrade_name\030\002 \002(\t\"\"\n"
    "\016cGetCourseList\022\020\n\010grade_id\030\001 \002(\005\"\235\001\n\016sG"
    "etCourseList\022\021\n\tcourse_id\030\001 \002(\005\022\023\n\013cours"
    "e_name\030\002 \002(\t\022\020\n\010language\030\003 \002(\005\022\013\n\003art\030\004 "
    "\002(\005\022\021\n\tcommunity\030\005 \002(\005\022\016\n\006health\030\006 \002(\005\022\017"
    "\n\007science\030\007 \002(\005\022\020\n\010res_path\030\010 \002(\t\"!\n\rcGe"
    "tClassList\022\020\n\010grade_id\030\001 \002(\005\"5\n\rsGetClas"
    "sList\022\020\n\010class_id\030\001 \002(\005\022\022\n\nclass_name\030\002 "
    "\002(\t\"$\n\021cGetClassRoomList\022\017\n\007content\030\001 \002("
    "\t\"A\n\021sGetClassRoomList\022\024\n\014classroom_id\030\001"
    " \002(\005\022\026\n\016classroom_name\030\002 \002(\t\"G\n\013cSetCont"
    "ent\022\017\n\007classId\030\001 \002(\005\022\023\n\013classroomId\030\002 \002("
    "\005\022\022\n\ncourseList\030\003 \002(\t\"\"\n\017cGetStudentList"
    "\022\017\n\007content\030\001 \002(\t\"<\n\017sGetStudentList\022\n\n\002"
    "id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\017\n\007resPath\030\003 \002(\t\""
    "\035\n\017cGetStudentInfo\022\n\n\002id\030\001 \002(\005\"\214\001\n\017sGetS"
    "tudentInfo\022\n\n\002id\030\001 \002(\005\022\016\n\006number\030\002 \002(\t\022\014"
    "\n\004name\030\003 \002(\t\022\013\n\003sex\030\004 \002(\t\022\014\n\004race\030\005 \002(\t\022"
    "\020\n\010birthday\030\006 \002(\t\022\016\n\006native\030\007 \002(\t\022\022\n\ncla"
    "ss_name\030\010 \002(\t\"\035\n\017cGetTeacherInfo\022\n\n\002id\030\001"
    " \002(\005\"\215\001\n\017sGetTeacherInfo\022\n\n\002id\030\001 \002(\005\022\016\n\006"
    "number\030\002 \002(\t\022\014\n\004name\030\003 \002(\t\022\013\n\003sex\030\004 \002(\t\022"
    "\014\n\004race\030\005 \002(\t\022\020\n\010birthday\030\006 \002(\t\022\016\n\006nativ"
    "e\030\007 \002(\t\022\023\n\013school_name\030\010 \002(\t", 1308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/protocol.proto", &protobuf_RegisterTypes);
  cLogin::default_instance_ = new cLogin();
  sLogin::default_instance_ = new sLogin();
  cLogout::default_instance_ = new cLogout();
  sLogout::default_instance_ = new sLogout();
  cGetFuncList::default_instance_ = new cGetFuncList();
  sGetFuncList::default_instance_ = new sGetFuncList();
  cSetFunc::default_instance_ = new cSetFunc();
  sSetFunc::default_instance_ = new sSetFunc();
  cGetGradeList::default_instance_ = new cGetGradeList();
  sGetGradeList::default_instance_ = new sGetGradeList();
  cGetCourseList::default_instance_ = new cGetCourseList();
  sGetCourseList::default_instance_ = new sGetCourseList();
  cGetClassList::default_instance_ = new cGetClassList();
  sGetClassList::default_instance_ = new sGetClassList();
  cGetClassRoomList::default_instance_ = new cGetClassRoomList();
  sGetClassRoomList::default_instance_ = new sGetClassRoomList();
  cSetContent::default_instance_ = new cSetContent();
  cGetStudentList::default_instance_ = new cGetStudentList();
  sGetStudentList::default_instance_ = new sGetStudentList();
  cGetStudentInfo::default_instance_ = new cGetStudentInfo();
  sGetStudentInfo::default_instance_ = new sGetStudentInfo();
  cGetTeacherInfo::default_instance_ = new cGetTeacherInfo();
  sGetTeacherInfo::default_instance_ = new sGetTeacherInfo();
  cLogin::default_instance_->InitAsDefaultInstance();
  sLogin::default_instance_->InitAsDefaultInstance();
  cLogout::default_instance_->InitAsDefaultInstance();
  sLogout::default_instance_->InitAsDefaultInstance();
  cGetFuncList::default_instance_->InitAsDefaultInstance();
  sGetFuncList::default_instance_->InitAsDefaultInstance();
  cSetFunc::default_instance_->InitAsDefaultInstance();
  sSetFunc::default_instance_->InitAsDefaultInstance();
  cGetGradeList::default_instance_->InitAsDefaultInstance();
  sGetGradeList::default_instance_->InitAsDefaultInstance();
  cGetCourseList::default_instance_->InitAsDefaultInstance();
  sGetCourseList::default_instance_->InitAsDefaultInstance();
  cGetClassList::default_instance_->InitAsDefaultInstance();
  sGetClassList::default_instance_->InitAsDefaultInstance();
  cGetClassRoomList::default_instance_->InitAsDefaultInstance();
  sGetClassRoomList::default_instance_->InitAsDefaultInstance();
  cSetContent::default_instance_->InitAsDefaultInstance();
  cGetStudentList::default_instance_->InitAsDefaultInstance();
  sGetStudentList::default_instance_->InitAsDefaultInstance();
  cGetStudentInfo::default_instance_->InitAsDefaultInstance();
  sGetStudentInfo::default_instance_->InitAsDefaultInstance();
  cGetTeacherInfo::default_instance_->InitAsDefaultInstance();
  sGetTeacherInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2fprotocol_2eproto {
  StaticDescriptorInitializer_proto_2fprotocol_2eproto() {
    protobuf_AddDesc_proto_2fprotocol_2eproto();
  }
} static_descriptor_initializer_proto_2fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int cLogin::kTypeFieldNumber;
const int cLogin::kAccountFieldNumber;
const int cLogin::kPasswdFieldNumber;
#endif  // !_MSC_VER

cLogin::cLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cLogin::InitAsDefaultInstance() {
}

cLogin::cLogin(const cLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cLogin::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  passwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cLogin::~cLogin() {
  SharedDtor();
}

void cLogin::SharedDtor() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (passwd_ != &::google::protobuf::internal::kEmptyString) {
    delete passwd_;
  }
  if (this != default_instance_) {
  }
}

void cLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cLogin_descriptor_;
}

const cLogin& cLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cLogin* cLogin::default_instance_ = NULL;

cLogin* cLogin::New() const {
  return new cLogin;
}

void cLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_account()) {
      if (account_ != &::google::protobuf::internal::kEmptyString) {
        account_->clear();
      }
    }
    if (has_passwd()) {
      if (passwd_ != &::google::protobuf::internal::kEmptyString) {
        passwd_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_account;
        break;
      }

      // required string account = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_passwd;
        break;
      }

      // required string passwd = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_passwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->account(), output);
  }

  // required string passwd = 3;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->passwd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // required string passwd = 3;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // required string account = 2;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // required string passwd = 3;
    if (has_passwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->passwd());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cLogin::MergeFrom(const cLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_account()) {
      set_account(from.account());
    }
    if (from.has_passwd()) {
      set_passwd(from.passwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cLogin::CopyFrom(const cLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void cLogin::Swap(cLogin* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(account_, other->account_);
    std::swap(passwd_, other->passwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cLogin_descriptor_;
  metadata.reflection = cLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sLogin::kResultFieldNumber;
#endif  // !_MSC_VER

sLogin::sLogin()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sLogin::InitAsDefaultInstance() {
}

sLogin::sLogin(const sLogin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sLogin::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sLogin::~sLogin() {
  SharedDtor();
}

void sLogin::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sLogin_descriptor_;
}

const sLogin& sLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sLogin* sLogin::default_instance_ = NULL;

sLogin* sLogin::New() const {
  return new sLogin;
}

void sLogin::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sLogin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sLogin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sLogin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sLogin::MergeFrom(const sLogin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sLogin::CopyFrom(const sLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void sLogin::Swap(sLogin* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sLogin_descriptor_;
  metadata.reflection = sLogin_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cLogout::kCommonFieldNumber;
#endif  // !_MSC_VER

cLogout::cLogout()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cLogout::InitAsDefaultInstance() {
}

cLogout::cLogout(const cLogout& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cLogout::SharedCtor() {
  _cached_size_ = 0;
  common_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cLogout::~cLogout() {
  SharedDtor();
}

void cLogout::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cLogout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cLogout_descriptor_;
}

const cLogout& cLogout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cLogout* cLogout::default_instance_ = NULL;

cLogout* cLogout::New() const {
  return new cLogout;
}

void cLogout::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    common_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 common = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &common_)));
          set_has_common();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 common = 1;
  if (has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->common(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cLogout::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 common = 1;
  if (has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->common(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cLogout::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 common = 1;
    if (has_common()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->common());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cLogout::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cLogout* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cLogout*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cLogout::MergeFrom(const cLogout& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_common()) {
      set_common(from.common());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cLogout::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cLogout::CopyFrom(const cLogout& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cLogout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cLogout::Swap(cLogout* other) {
  if (other != this) {
    std::swap(common_, other->common_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cLogout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cLogout_descriptor_;
  metadata.reflection = cLogout_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sLogout::kCommonFieldNumber;
#endif  // !_MSC_VER

sLogout::sLogout()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sLogout::InitAsDefaultInstance() {
}

sLogout::sLogout(const sLogout& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sLogout::SharedCtor() {
  _cached_size_ = 0;
  common_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sLogout::~sLogout() {
  SharedDtor();
}

void sLogout::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sLogout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sLogout_descriptor_;
}

const sLogout& sLogout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sLogout* sLogout::default_instance_ = NULL;

sLogout* sLogout::New() const {
  return new sLogout;
}

void sLogout::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    common_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 common = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &common_)));
          set_has_common();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 common = 1;
  if (has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->common(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sLogout::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 common = 1;
  if (has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->common(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sLogout::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 common = 1;
    if (has_common()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->common());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sLogout::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sLogout* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sLogout*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sLogout::MergeFrom(const sLogout& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_common()) {
      set_common(from.common());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sLogout::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sLogout::CopyFrom(const sLogout& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sLogout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void sLogout::Swap(sLogout* other) {
  if (other != this) {
    std::swap(common_, other->common_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sLogout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sLogout_descriptor_;
  metadata.reflection = sLogout_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetFuncList::kContentFieldNumber;
#endif  // !_MSC_VER

cGetFuncList::cGetFuncList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetFuncList::InitAsDefaultInstance() {
}

cGetFuncList::cGetFuncList(const cGetFuncList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetFuncList::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetFuncList::~cGetFuncList() {
  SharedDtor();
}

void cGetFuncList::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void cGetFuncList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetFuncList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetFuncList_descriptor_;
}

const cGetFuncList& cGetFuncList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetFuncList* cGetFuncList::default_instance_ = NULL;

cGetFuncList* cGetFuncList::New() const {
  return new cGetFuncList;
}

void cGetFuncList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetFuncList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetFuncList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetFuncList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetFuncList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetFuncList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetFuncList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetFuncList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetFuncList::MergeFrom(const cGetFuncList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetFuncList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetFuncList::CopyFrom(const cGetFuncList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetFuncList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetFuncList::Swap(cGetFuncList* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetFuncList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetFuncList_descriptor_;
  metadata.reflection = cGetFuncList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetFuncList::kIdFieldNumber;
const int sGetFuncList::kNameFieldNumber;
const int sGetFuncList::kResPathFieldNumber;
#endif  // !_MSC_VER

sGetFuncList::sGetFuncList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetFuncList::InitAsDefaultInstance() {
}

sGetFuncList::sGetFuncList(const sGetFuncList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetFuncList::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  res_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetFuncList::~sGetFuncList() {
  SharedDtor();
}

void sGetFuncList::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (res_path_ != &::google::protobuf::internal::kEmptyString) {
    delete res_path_;
  }
  if (this != default_instance_) {
  }
}

void sGetFuncList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetFuncList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetFuncList_descriptor_;
}

const sGetFuncList& sGetFuncList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetFuncList* sGetFuncList::default_instance_ = NULL;

sGetFuncList* sGetFuncList::New() const {
  return new sGetFuncList;
}

void sGetFuncList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_res_path()) {
      if (res_path_ != &::google::protobuf::internal::kEmptyString) {
        res_path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetFuncList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_res_path;
        break;
      }

      // required string res_path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_res_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->res_path().data(), this->res_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // required int32 id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetFuncList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string res_path = 2;
  if (has_res_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->res_path().data(), this->res_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->res_path(), output);
  }

  // required int32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetFuncList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string res_path = 2;
  if (has_res_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->res_path().data(), this->res_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->res_path(), target);
  }

  // required int32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetFuncList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string res_path = 2;
    if (has_res_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->res_path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetFuncList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetFuncList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetFuncList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetFuncList::MergeFrom(const sGetFuncList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_res_path()) {
      set_res_path(from.res_path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetFuncList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetFuncList::CopyFrom(const sGetFuncList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetFuncList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void sGetFuncList::Swap(sGetFuncList* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(res_path_, other->res_path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetFuncList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetFuncList_descriptor_;
  metadata.reflection = sGetFuncList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cSetFunc::kFuncIdFieldNumber;
#endif  // !_MSC_VER

cSetFunc::cSetFunc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cSetFunc::InitAsDefaultInstance() {
}

cSetFunc::cSetFunc(const cSetFunc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cSetFunc::SharedCtor() {
  _cached_size_ = 0;
  funcid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cSetFunc::~cSetFunc() {
  SharedDtor();
}

void cSetFunc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cSetFunc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cSetFunc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cSetFunc_descriptor_;
}

const cSetFunc& cSetFunc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cSetFunc* cSetFunc::default_instance_ = NULL;

cSetFunc* cSetFunc::New() const {
  return new cSetFunc;
}

void cSetFunc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    funcid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cSetFunc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 funcId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
          set_has_funcid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cSetFunc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 funcId = 1;
  if (has_funcid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cSetFunc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 funcId = 1;
  if (has_funcid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cSetFunc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 funcId = 1;
    if (has_funcid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->funcid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cSetFunc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cSetFunc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cSetFunc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cSetFunc::MergeFrom(const cSetFunc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_funcid()) {
      set_funcid(from.funcid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cSetFunc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cSetFunc::CopyFrom(const cSetFunc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cSetFunc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cSetFunc::Swap(cSetFunc* other) {
  if (other != this) {
    std::swap(funcid_, other->funcid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cSetFunc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cSetFunc_descriptor_;
  metadata.reflection = cSetFunc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sSetFunc::kStatusFieldNumber;
#endif  // !_MSC_VER

sSetFunc::sSetFunc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sSetFunc::InitAsDefaultInstance() {
}

sSetFunc::sSetFunc(const sSetFunc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sSetFunc::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sSetFunc::~sSetFunc() {
  SharedDtor();
}

void sSetFunc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sSetFunc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sSetFunc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sSetFunc_descriptor_;
}

const sSetFunc& sSetFunc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sSetFunc* sSetFunc::default_instance_ = NULL;

sSetFunc* sSetFunc::New() const {
  return new sSetFunc;
}

void sSetFunc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sSetFunc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sSetFunc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sSetFunc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sSetFunc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sSetFunc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sSetFunc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sSetFunc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sSetFunc::MergeFrom(const sSetFunc& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sSetFunc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sSetFunc::CopyFrom(const sSetFunc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sSetFunc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void sSetFunc::Swap(sSetFunc* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sSetFunc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sSetFunc_descriptor_;
  metadata.reflection = sSetFunc_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetGradeList::kContentFieldNumber;
#endif  // !_MSC_VER

cGetGradeList::cGetGradeList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetGradeList::InitAsDefaultInstance() {
}

cGetGradeList::cGetGradeList(const cGetGradeList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetGradeList::SharedCtor() {
  _cached_size_ = 0;
  content_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetGradeList::~cGetGradeList() {
  SharedDtor();
}

void cGetGradeList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cGetGradeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetGradeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetGradeList_descriptor_;
}

const cGetGradeList& cGetGradeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetGradeList* cGetGradeList::default_instance_ = NULL;

cGetGradeList* cGetGradeList::New() const {
  return new cGetGradeList;
}

void cGetGradeList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    content_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetGradeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &content_)));
          set_has_content();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetGradeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetGradeList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 content = 1;
  if (has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetGradeList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetGradeList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetGradeList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetGradeList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetGradeList::MergeFrom(const cGetGradeList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetGradeList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetGradeList::CopyFrom(const cGetGradeList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetGradeList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetGradeList::Swap(cGetGradeList* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetGradeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetGradeList_descriptor_;
  metadata.reflection = cGetGradeList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetGradeList::kGradeIdFieldNumber;
const int sGetGradeList::kGradeNameFieldNumber;
#endif  // !_MSC_VER

sGetGradeList::sGetGradeList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetGradeList::InitAsDefaultInstance() {
}

sGetGradeList::sGetGradeList(const sGetGradeList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetGradeList::SharedCtor() {
  _cached_size_ = 0;
  grade_id_ = 0;
  grade_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetGradeList::~sGetGradeList() {
  SharedDtor();
}

void sGetGradeList::SharedDtor() {
  if (grade_name_ != &::google::protobuf::internal::kEmptyString) {
    delete grade_name_;
  }
  if (this != default_instance_) {
  }
}

void sGetGradeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetGradeList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetGradeList_descriptor_;
}

const sGetGradeList& sGetGradeList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetGradeList* sGetGradeList::default_instance_ = NULL;

sGetGradeList* sGetGradeList::New() const {
  return new sGetGradeList;
}

void sGetGradeList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_id_ = 0;
    if (has_grade_name()) {
      if (grade_name_ != &::google::protobuf::internal::kEmptyString) {
        grade_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetGradeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 grade_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_id_)));
          set_has_grade_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_grade_name;
        break;
      }

      // required string grade_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_grade_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_grade_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->grade_name().data(), this->grade_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetGradeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grade_id(), output);
  }

  // required string grade_name = 2;
  if (has_grade_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->grade_name().data(), this->grade_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->grade_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetGradeList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grade_id(), target);
  }

  // required string grade_name = 2;
  if (has_grade_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->grade_name().data(), this->grade_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->grade_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetGradeList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 grade_id = 1;
    if (has_grade_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grade_id());
    }

    // required string grade_name = 2;
    if (has_grade_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->grade_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetGradeList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetGradeList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetGradeList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetGradeList::MergeFrom(const sGetGradeList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade_id()) {
      set_grade_id(from.grade_id());
    }
    if (from.has_grade_name()) {
      set_grade_name(from.grade_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetGradeList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetGradeList::CopyFrom(const sGetGradeList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetGradeList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void sGetGradeList::Swap(sGetGradeList* other) {
  if (other != this) {
    std::swap(grade_id_, other->grade_id_);
    std::swap(grade_name_, other->grade_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetGradeList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetGradeList_descriptor_;
  metadata.reflection = sGetGradeList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetCourseList::kGradeIdFieldNumber;
#endif  // !_MSC_VER

cGetCourseList::cGetCourseList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetCourseList::InitAsDefaultInstance() {
}

cGetCourseList::cGetCourseList(const cGetCourseList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetCourseList::SharedCtor() {
  _cached_size_ = 0;
  grade_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetCourseList::~cGetCourseList() {
  SharedDtor();
}

void cGetCourseList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cGetCourseList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetCourseList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetCourseList_descriptor_;
}

const cGetCourseList& cGetCourseList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetCourseList* cGetCourseList::default_instance_ = NULL;

cGetCourseList* cGetCourseList::New() const {
  return new cGetCourseList;
}

void cGetCourseList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetCourseList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 grade_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_id_)));
          set_has_grade_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetCourseList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grade_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetCourseList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grade_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetCourseList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 grade_id = 1;
    if (has_grade_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grade_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetCourseList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetCourseList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetCourseList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetCourseList::MergeFrom(const cGetCourseList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade_id()) {
      set_grade_id(from.grade_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetCourseList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetCourseList::CopyFrom(const cGetCourseList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetCourseList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetCourseList::Swap(cGetCourseList* other) {
  if (other != this) {
    std::swap(grade_id_, other->grade_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetCourseList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetCourseList_descriptor_;
  metadata.reflection = cGetCourseList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetCourseList::kCourseIdFieldNumber;
const int sGetCourseList::kCourseNameFieldNumber;
const int sGetCourseList::kLanguageFieldNumber;
const int sGetCourseList::kArtFieldNumber;
const int sGetCourseList::kCommunityFieldNumber;
const int sGetCourseList::kHealthFieldNumber;
const int sGetCourseList::kScienceFieldNumber;
const int sGetCourseList::kResPathFieldNumber;
#endif  // !_MSC_VER

sGetCourseList::sGetCourseList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetCourseList::InitAsDefaultInstance() {
}

sGetCourseList::sGetCourseList(const sGetCourseList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetCourseList::SharedCtor() {
  _cached_size_ = 0;
  course_id_ = 0;
  course_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  language_ = 0;
  art_ = 0;
  community_ = 0;
  health_ = 0;
  science_ = 0;
  res_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetCourseList::~sGetCourseList() {
  SharedDtor();
}

void sGetCourseList::SharedDtor() {
  if (course_name_ != &::google::protobuf::internal::kEmptyString) {
    delete course_name_;
  }
  if (res_path_ != &::google::protobuf::internal::kEmptyString) {
    delete res_path_;
  }
  if (this != default_instance_) {
  }
}

void sGetCourseList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetCourseList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetCourseList_descriptor_;
}

const sGetCourseList& sGetCourseList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetCourseList* sGetCourseList::default_instance_ = NULL;

sGetCourseList* sGetCourseList::New() const {
  return new sGetCourseList;
}

void sGetCourseList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    course_id_ = 0;
    if (has_course_name()) {
      if (course_name_ != &::google::protobuf::internal::kEmptyString) {
        course_name_->clear();
      }
    }
    language_ = 0;
    art_ = 0;
    community_ = 0;
    health_ = 0;
    science_ = 0;
    if (has_res_path()) {
      if (res_path_ != &::google::protobuf::internal::kEmptyString) {
        res_path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetCourseList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 course_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &course_id_)));
          set_has_course_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_course_name;
        break;
      }

      // required string course_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_course_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_course_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->course_name().data(), this->course_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_language;
        break;
      }

      // required int32 language = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_language:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
          set_has_language();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_art;
        break;
      }

      // required int32 art = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_art:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &art_)));
          set_has_art();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_community;
        break;
      }

      // required int32 community = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_community:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &community_)));
          set_has_community();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_health;
        break;
      }

      // required int32 health = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
          set_has_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_science;
        break;
      }

      // required int32 science = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_science:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &science_)));
          set_has_science();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_res_path;
        break;
      }

      // required string res_path = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_res_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->res_path().data(), this->res_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetCourseList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 course_id = 1;
  if (has_course_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->course_id(), output);
  }

  // required string course_name = 2;
  if (has_course_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->course_name().data(), this->course_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->course_name(), output);
  }

  // required int32 language = 3;
  if (has_language()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->language(), output);
  }

  // required int32 art = 4;
  if (has_art()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->art(), output);
  }

  // required int32 community = 5;
  if (has_community()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->community(), output);
  }

  // required int32 health = 6;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->health(), output);
  }

  // required int32 science = 7;
  if (has_science()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->science(), output);
  }

  // required string res_path = 8;
  if (has_res_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->res_path().data(), this->res_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->res_path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetCourseList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 course_id = 1;
  if (has_course_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->course_id(), target);
  }

  // required string course_name = 2;
  if (has_course_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->course_name().data(), this->course_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->course_name(), target);
  }

  // required int32 language = 3;
  if (has_language()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->language(), target);
  }

  // required int32 art = 4;
  if (has_art()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->art(), target);
  }

  // required int32 community = 5;
  if (has_community()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->community(), target);
  }

  // required int32 health = 6;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->health(), target);
  }

  // required int32 science = 7;
  if (has_science()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->science(), target);
  }

  // required string res_path = 8;
  if (has_res_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->res_path().data(), this->res_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->res_path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetCourseList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 course_id = 1;
    if (has_course_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->course_id());
    }

    // required string course_name = 2;
    if (has_course_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->course_name());
    }

    // required int32 language = 3;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // required int32 art = 4;
    if (has_art()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->art());
    }

    // required int32 community = 5;
    if (has_community()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->community());
    }

    // required int32 health = 6;
    if (has_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }

    // required int32 science = 7;
    if (has_science()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->science());
    }

    // required string res_path = 8;
    if (has_res_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->res_path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetCourseList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetCourseList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetCourseList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetCourseList::MergeFrom(const sGetCourseList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_course_id()) {
      set_course_id(from.course_id());
    }
    if (from.has_course_name()) {
      set_course_name(from.course_name());
    }
    if (from.has_language()) {
      set_language(from.language());
    }
    if (from.has_art()) {
      set_art(from.art());
    }
    if (from.has_community()) {
      set_community(from.community());
    }
    if (from.has_health()) {
      set_health(from.health());
    }
    if (from.has_science()) {
      set_science(from.science());
    }
    if (from.has_res_path()) {
      set_res_path(from.res_path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetCourseList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetCourseList::CopyFrom(const sGetCourseList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetCourseList::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void sGetCourseList::Swap(sGetCourseList* other) {
  if (other != this) {
    std::swap(course_id_, other->course_id_);
    std::swap(course_name_, other->course_name_);
    std::swap(language_, other->language_);
    std::swap(art_, other->art_);
    std::swap(community_, other->community_);
    std::swap(health_, other->health_);
    std::swap(science_, other->science_);
    std::swap(res_path_, other->res_path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetCourseList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetCourseList_descriptor_;
  metadata.reflection = sGetCourseList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetClassList::kGradeIdFieldNumber;
#endif  // !_MSC_VER

cGetClassList::cGetClassList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetClassList::InitAsDefaultInstance() {
}

cGetClassList::cGetClassList(const cGetClassList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetClassList::SharedCtor() {
  _cached_size_ = 0;
  grade_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetClassList::~cGetClassList() {
  SharedDtor();
}

void cGetClassList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cGetClassList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetClassList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetClassList_descriptor_;
}

const cGetClassList& cGetClassList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetClassList* cGetClassList::default_instance_ = NULL;

cGetClassList* cGetClassList::New() const {
  return new cGetClassList;
}

void cGetClassList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetClassList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 grade_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_id_)));
          set_has_grade_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetClassList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grade_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetClassList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 grade_id = 1;
  if (has_grade_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grade_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetClassList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 grade_id = 1;
    if (has_grade_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grade_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetClassList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetClassList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetClassList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetClassList::MergeFrom(const cGetClassList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade_id()) {
      set_grade_id(from.grade_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetClassList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetClassList::CopyFrom(const cGetClassList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetClassList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetClassList::Swap(cGetClassList* other) {
  if (other != this) {
    std::swap(grade_id_, other->grade_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetClassList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetClassList_descriptor_;
  metadata.reflection = cGetClassList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetClassList::kClassIdFieldNumber;
const int sGetClassList::kClassNameFieldNumber;
#endif  // !_MSC_VER

sGetClassList::sGetClassList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetClassList::InitAsDefaultInstance() {
}

sGetClassList::sGetClassList(const sGetClassList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetClassList::SharedCtor() {
  _cached_size_ = 0;
  class_id_ = 0;
  class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetClassList::~sGetClassList() {
  SharedDtor();
}

void sGetClassList::SharedDtor() {
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    delete class_name_;
  }
  if (this != default_instance_) {
  }
}

void sGetClassList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetClassList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetClassList_descriptor_;
}

const sGetClassList& sGetClassList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetClassList* sGetClassList::default_instance_ = NULL;

sGetClassList* sGetClassList::New() const {
  return new sGetClassList;
}

void sGetClassList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    class_id_ = 0;
    if (has_class_name()) {
      if (class_name_ != &::google::protobuf::internal::kEmptyString) {
        class_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetClassList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &class_id_)));
          set_has_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_class_name;
        break;
      }

      // required string class_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_class_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->class_name().data(), this->class_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetClassList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 class_id = 1;
  if (has_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->class_id(), output);
  }

  // required string class_name = 2;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->class_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetClassList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 class_id = 1;
  if (has_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->class_id(), target);
  }

  // required string class_name = 2;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->class_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetClassList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 class_id = 1;
    if (has_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->class_id());
    }

    // required string class_name = 2;
    if (has_class_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->class_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetClassList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetClassList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetClassList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetClassList::MergeFrom(const sGetClassList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_id()) {
      set_class_id(from.class_id());
    }
    if (from.has_class_name()) {
      set_class_name(from.class_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetClassList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetClassList::CopyFrom(const sGetClassList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetClassList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void sGetClassList::Swap(sGetClassList* other) {
  if (other != this) {
    std::swap(class_id_, other->class_id_);
    std::swap(class_name_, other->class_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetClassList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetClassList_descriptor_;
  metadata.reflection = sGetClassList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetClassRoomList::kContentFieldNumber;
#endif  // !_MSC_VER

cGetClassRoomList::cGetClassRoomList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetClassRoomList::InitAsDefaultInstance() {
}

cGetClassRoomList::cGetClassRoomList(const cGetClassRoomList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetClassRoomList::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetClassRoomList::~cGetClassRoomList() {
  SharedDtor();
}

void cGetClassRoomList::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void cGetClassRoomList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetClassRoomList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetClassRoomList_descriptor_;
}

const cGetClassRoomList& cGetClassRoomList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetClassRoomList* cGetClassRoomList::default_instance_ = NULL;

cGetClassRoomList* cGetClassRoomList::New() const {
  return new cGetClassRoomList;
}

void cGetClassRoomList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetClassRoomList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetClassRoomList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetClassRoomList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetClassRoomList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetClassRoomList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetClassRoomList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetClassRoomList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetClassRoomList::MergeFrom(const cGetClassRoomList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetClassRoomList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetClassRoomList::CopyFrom(const cGetClassRoomList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetClassRoomList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetClassRoomList::Swap(cGetClassRoomList* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetClassRoomList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetClassRoomList_descriptor_;
  metadata.reflection = cGetClassRoomList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetClassRoomList::kClassroomIdFieldNumber;
const int sGetClassRoomList::kClassroomNameFieldNumber;
#endif  // !_MSC_VER

sGetClassRoomList::sGetClassRoomList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetClassRoomList::InitAsDefaultInstance() {
}

sGetClassRoomList::sGetClassRoomList(const sGetClassRoomList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetClassRoomList::SharedCtor() {
  _cached_size_ = 0;
  classroom_id_ = 0;
  classroom_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetClassRoomList::~sGetClassRoomList() {
  SharedDtor();
}

void sGetClassRoomList::SharedDtor() {
  if (classroom_name_ != &::google::protobuf::internal::kEmptyString) {
    delete classroom_name_;
  }
  if (this != default_instance_) {
  }
}

void sGetClassRoomList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetClassRoomList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetClassRoomList_descriptor_;
}

const sGetClassRoomList& sGetClassRoomList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetClassRoomList* sGetClassRoomList::default_instance_ = NULL;

sGetClassRoomList* sGetClassRoomList::New() const {
  return new sGetClassRoomList;
}

void sGetClassRoomList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    classroom_id_ = 0;
    if (has_classroom_name()) {
      if (classroom_name_ != &::google::protobuf::internal::kEmptyString) {
        classroom_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetClassRoomList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 classroom_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classroom_id_)));
          set_has_classroom_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_classroom_name;
        break;
      }

      // required string classroom_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_classroom_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classroom_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->classroom_name().data(), this->classroom_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetClassRoomList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 classroom_id = 1;
  if (has_classroom_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->classroom_id(), output);
  }

  // required string classroom_name = 2;
  if (has_classroom_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->classroom_name().data(), this->classroom_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->classroom_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetClassRoomList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 classroom_id = 1;
  if (has_classroom_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->classroom_id(), target);
  }

  // required string classroom_name = 2;
  if (has_classroom_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->classroom_name().data(), this->classroom_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->classroom_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetClassRoomList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 classroom_id = 1;
    if (has_classroom_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classroom_id());
    }

    // required string classroom_name = 2;
    if (has_classroom_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->classroom_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetClassRoomList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetClassRoomList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetClassRoomList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetClassRoomList::MergeFrom(const sGetClassRoomList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_classroom_id()) {
      set_classroom_id(from.classroom_id());
    }
    if (from.has_classroom_name()) {
      set_classroom_name(from.classroom_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetClassRoomList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetClassRoomList::CopyFrom(const sGetClassRoomList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetClassRoomList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void sGetClassRoomList::Swap(sGetClassRoomList* other) {
  if (other != this) {
    std::swap(classroom_id_, other->classroom_id_);
    std::swap(classroom_name_, other->classroom_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetClassRoomList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetClassRoomList_descriptor_;
  metadata.reflection = sGetClassRoomList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cSetContent::kClassIdFieldNumber;
const int cSetContent::kClassroomIdFieldNumber;
const int cSetContent::kCourseListFieldNumber;
#endif  // !_MSC_VER

cSetContent::cSetContent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cSetContent::InitAsDefaultInstance() {
}

cSetContent::cSetContent(const cSetContent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cSetContent::SharedCtor() {
  _cached_size_ = 0;
  classid_ = 0;
  classroomid_ = 0;
  courselist_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cSetContent::~cSetContent() {
  SharedDtor();
}

void cSetContent::SharedDtor() {
  if (courselist_ != &::google::protobuf::internal::kEmptyString) {
    delete courselist_;
  }
  if (this != default_instance_) {
  }
}

void cSetContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cSetContent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cSetContent_descriptor_;
}

const cSetContent& cSetContent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cSetContent* cSetContent::default_instance_ = NULL;

cSetContent* cSetContent::New() const {
  return new cSetContent;
}

void cSetContent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    classid_ = 0;
    classroomid_ = 0;
    if (has_courselist()) {
      if (courselist_ != &::google::protobuf::internal::kEmptyString) {
        courselist_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cSetContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 classId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classid_)));
          set_has_classid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_classroomId;
        break;
      }

      // required int32 classroomId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_classroomId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &classroomid_)));
          set_has_classroomid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_courseList;
        break;
      }

      // required string courseList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_courseList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_courselist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->courselist().data(), this->courselist().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cSetContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 classId = 1;
  if (has_classid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->classid(), output);
  }

  // required int32 classroomId = 2;
  if (has_classroomid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->classroomid(), output);
  }

  // required string courseList = 3;
  if (has_courselist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->courselist().data(), this->courselist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->courselist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cSetContent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 classId = 1;
  if (has_classid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->classid(), target);
  }

  // required int32 classroomId = 2;
  if (has_classroomid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->classroomid(), target);
  }

  // required string courseList = 3;
  if (has_courselist()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->courselist().data(), this->courselist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->courselist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cSetContent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 classId = 1;
    if (has_classid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classid());
    }

    // required int32 classroomId = 2;
    if (has_classroomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->classroomid());
    }

    // required string courseList = 3;
    if (has_courselist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->courselist());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cSetContent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cSetContent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cSetContent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cSetContent::MergeFrom(const cSetContent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_classid()) {
      set_classid(from.classid());
    }
    if (from.has_classroomid()) {
      set_classroomid(from.classroomid());
    }
    if (from.has_courselist()) {
      set_courselist(from.courselist());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cSetContent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cSetContent::CopyFrom(const cSetContent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cSetContent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void cSetContent::Swap(cSetContent* other) {
  if (other != this) {
    std::swap(classid_, other->classid_);
    std::swap(classroomid_, other->classroomid_);
    std::swap(courselist_, other->courselist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cSetContent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cSetContent_descriptor_;
  metadata.reflection = cSetContent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetStudentList::kContentFieldNumber;
#endif  // !_MSC_VER

cGetStudentList::cGetStudentList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetStudentList::InitAsDefaultInstance() {
}

cGetStudentList::cGetStudentList(const cGetStudentList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetStudentList::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetStudentList::~cGetStudentList() {
  SharedDtor();
}

void cGetStudentList::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void cGetStudentList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetStudentList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetStudentList_descriptor_;
}

const cGetStudentList& cGetStudentList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetStudentList* cGetStudentList::default_instance_ = NULL;

cGetStudentList* cGetStudentList::New() const {
  return new cGetStudentList;
}

void cGetStudentList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetStudentList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetStudentList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetStudentList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetStudentList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetStudentList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetStudentList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetStudentList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetStudentList::MergeFrom(const cGetStudentList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetStudentList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetStudentList::CopyFrom(const cGetStudentList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetStudentList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetStudentList::Swap(cGetStudentList* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetStudentList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetStudentList_descriptor_;
  metadata.reflection = cGetStudentList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetStudentList::kIdFieldNumber;
const int sGetStudentList::kNameFieldNumber;
const int sGetStudentList::kResPathFieldNumber;
#endif  // !_MSC_VER

sGetStudentList::sGetStudentList()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetStudentList::InitAsDefaultInstance() {
}

sGetStudentList::sGetStudentList(const sGetStudentList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetStudentList::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  respath_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetStudentList::~sGetStudentList() {
  SharedDtor();
}

void sGetStudentList::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (respath_ != &::google::protobuf::internal::kEmptyString) {
    delete respath_;
  }
  if (this != default_instance_) {
  }
}

void sGetStudentList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetStudentList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetStudentList_descriptor_;
}

const sGetStudentList& sGetStudentList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetStudentList* sGetStudentList::default_instance_ = NULL;

sGetStudentList* sGetStudentList::New() const {
  return new sGetStudentList;
}

void sGetStudentList::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_respath()) {
      if (respath_ != &::google::protobuf::internal::kEmptyString) {
        respath_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetStudentList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_resPath;
        break;
      }

      // required string resPath = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_respath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->respath().data(), this->respath().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetStudentList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // required string resPath = 3;
  if (has_respath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respath().data(), this->respath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->respath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetStudentList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string resPath = 3;
  if (has_respath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->respath().data(), this->respath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->respath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetStudentList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string resPath = 3;
    if (has_respath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->respath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetStudentList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetStudentList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetStudentList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetStudentList::MergeFrom(const sGetStudentList& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_respath()) {
      set_respath(from.respath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetStudentList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetStudentList::CopyFrom(const sGetStudentList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetStudentList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void sGetStudentList::Swap(sGetStudentList* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(respath_, other->respath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetStudentList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetStudentList_descriptor_;
  metadata.reflection = sGetStudentList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetStudentInfo::kIdFieldNumber;
#endif  // !_MSC_VER

cGetStudentInfo::cGetStudentInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetStudentInfo::InitAsDefaultInstance() {
}

cGetStudentInfo::cGetStudentInfo(const cGetStudentInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetStudentInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetStudentInfo::~cGetStudentInfo() {
  SharedDtor();
}

void cGetStudentInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cGetStudentInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetStudentInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetStudentInfo_descriptor_;
}

const cGetStudentInfo& cGetStudentInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetStudentInfo* cGetStudentInfo::default_instance_ = NULL;

cGetStudentInfo* cGetStudentInfo::New() const {
  return new cGetStudentInfo;
}

void cGetStudentInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetStudentInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetStudentInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetStudentInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetStudentInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetStudentInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetStudentInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetStudentInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetStudentInfo::MergeFrom(const cGetStudentInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetStudentInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetStudentInfo::CopyFrom(const cGetStudentInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetStudentInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetStudentInfo::Swap(cGetStudentInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetStudentInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetStudentInfo_descriptor_;
  metadata.reflection = cGetStudentInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetStudentInfo::kIdFieldNumber;
const int sGetStudentInfo::kNumberFieldNumber;
const int sGetStudentInfo::kNameFieldNumber;
const int sGetStudentInfo::kSexFieldNumber;
const int sGetStudentInfo::kRaceFieldNumber;
const int sGetStudentInfo::kBirthdayFieldNumber;
const int sGetStudentInfo::kNativeFieldNumber;
const int sGetStudentInfo::kClassNameFieldNumber;
#endif  // !_MSC_VER

sGetStudentInfo::sGetStudentInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetStudentInfo::InitAsDefaultInstance() {
}

sGetStudentInfo::sGetStudentInfo(const sGetStudentInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetStudentInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  race_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  native_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  class_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetStudentInfo::~sGetStudentInfo() {
  SharedDtor();
}

void sGetStudentInfo::SharedDtor() {
  if (number_ != &::google::protobuf::internal::kEmptyString) {
    delete number_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (sex_ != &::google::protobuf::internal::kEmptyString) {
    delete sex_;
  }
  if (race_ != &::google::protobuf::internal::kEmptyString) {
    delete race_;
  }
  if (birthday_ != &::google::protobuf::internal::kEmptyString) {
    delete birthday_;
  }
  if (native_ != &::google::protobuf::internal::kEmptyString) {
    delete native_;
  }
  if (class_name_ != &::google::protobuf::internal::kEmptyString) {
    delete class_name_;
  }
  if (this != default_instance_) {
  }
}

void sGetStudentInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetStudentInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetStudentInfo_descriptor_;
}

const sGetStudentInfo& sGetStudentInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetStudentInfo* sGetStudentInfo::default_instance_ = NULL;

sGetStudentInfo* sGetStudentInfo::New() const {
  return new sGetStudentInfo;
}

void sGetStudentInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_number()) {
      if (number_ != &::google::protobuf::internal::kEmptyString) {
        number_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_sex()) {
      if (sex_ != &::google::protobuf::internal::kEmptyString) {
        sex_->clear();
      }
    }
    if (has_race()) {
      if (race_ != &::google::protobuf::internal::kEmptyString) {
        race_->clear();
      }
    }
    if (has_birthday()) {
      if (birthday_ != &::google::protobuf::internal::kEmptyString) {
        birthday_->clear();
      }
    }
    if (has_native()) {
      if (native_ != &::google::protobuf::internal::kEmptyString) {
        native_->clear();
      }
    }
    if (has_class_name()) {
      if (class_name_ != &::google::protobuf::internal::kEmptyString) {
        class_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetStudentInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_number;
        break;
      }

      // required string number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sex;
        break;
      }

      // required string sex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sex().data(), this->sex().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_race;
        break;
      }

      // required string race = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_race:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_race()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->race().data(), this->race().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_birthday;
        break;
      }

      // required string birthday = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->birthday().data(), this->birthday().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_native;
        break;
      }

      // required string native = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_native:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_native()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->native().data(), this->native().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_class_name;
        break;
      }

      // required string class_name = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_class_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->class_name().data(), this->class_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetStudentInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->number(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  // required string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->sex(), output);
  }

  // required string race = 5;
  if (has_race()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race().data(), this->race().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->race(), output);
  }

  // required string birthday = 6;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->birthday(), output);
  }

  // required string native = 7;
  if (has_native()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->native().data(), this->native().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->native(), output);
  }

  // required string class_name = 8;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->class_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetStudentInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->number(), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sex(), target);
  }

  // required string race = 5;
  if (has_race()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race().data(), this->race().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->race(), target);
  }

  // required string birthday = 6;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->birthday(), target);
  }

  // required string native = 7;
  if (has_native()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->native().data(), this->native().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->native(), target);
  }

  // required string class_name = 8;
  if (has_class_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->class_name().data(), this->class_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->class_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetStudentInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sex());
    }

    // required string race = 5;
    if (has_race()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->race());
    }

    // required string birthday = 6;
    if (has_birthday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->birthday());
    }

    // required string native = 7;
    if (has_native()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->native());
    }

    // required string class_name = 8;
    if (has_class_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->class_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetStudentInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetStudentInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetStudentInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetStudentInfo::MergeFrom(const sGetStudentInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_race()) {
      set_race(from.race());
    }
    if (from.has_birthday()) {
      set_birthday(from.birthday());
    }
    if (from.has_native()) {
      set_native(from.native());
    }
    if (from.has_class_name()) {
      set_class_name(from.class_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetStudentInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetStudentInfo::CopyFrom(const sGetStudentInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetStudentInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void sGetStudentInfo::Swap(sGetStudentInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(number_, other->number_);
    std::swap(name_, other->name_);
    std::swap(sex_, other->sex_);
    std::swap(race_, other->race_);
    std::swap(birthday_, other->birthday_);
    std::swap(native_, other->native_);
    std::swap(class_name_, other->class_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetStudentInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetStudentInfo_descriptor_;
  metadata.reflection = sGetStudentInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cGetTeacherInfo::kIdFieldNumber;
#endif  // !_MSC_VER

cGetTeacherInfo::cGetTeacherInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cGetTeacherInfo::InitAsDefaultInstance() {
}

cGetTeacherInfo::cGetTeacherInfo(const cGetTeacherInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cGetTeacherInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cGetTeacherInfo::~cGetTeacherInfo() {
  SharedDtor();
}

void cGetTeacherInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cGetTeacherInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cGetTeacherInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cGetTeacherInfo_descriptor_;
}

const cGetTeacherInfo& cGetTeacherInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

cGetTeacherInfo* cGetTeacherInfo::default_instance_ = NULL;

cGetTeacherInfo* cGetTeacherInfo::New() const {
  return new cGetTeacherInfo;
}

void cGetTeacherInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cGetTeacherInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cGetTeacherInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cGetTeacherInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cGetTeacherInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cGetTeacherInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cGetTeacherInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cGetTeacherInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cGetTeacherInfo::MergeFrom(const cGetTeacherInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cGetTeacherInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cGetTeacherInfo::CopyFrom(const cGetTeacherInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cGetTeacherInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void cGetTeacherInfo::Swap(cGetTeacherInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cGetTeacherInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cGetTeacherInfo_descriptor_;
  metadata.reflection = cGetTeacherInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sGetTeacherInfo::kIdFieldNumber;
const int sGetTeacherInfo::kNumberFieldNumber;
const int sGetTeacherInfo::kNameFieldNumber;
const int sGetTeacherInfo::kSexFieldNumber;
const int sGetTeacherInfo::kRaceFieldNumber;
const int sGetTeacherInfo::kBirthdayFieldNumber;
const int sGetTeacherInfo::kNativeFieldNumber;
const int sGetTeacherInfo::kSchoolNameFieldNumber;
#endif  // !_MSC_VER

sGetTeacherInfo::sGetTeacherInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sGetTeacherInfo::InitAsDefaultInstance() {
}

sGetTeacherInfo::sGetTeacherInfo(const sGetTeacherInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sGetTeacherInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  sex_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  race_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  native_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  school_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sGetTeacherInfo::~sGetTeacherInfo() {
  SharedDtor();
}

void sGetTeacherInfo::SharedDtor() {
  if (number_ != &::google::protobuf::internal::kEmptyString) {
    delete number_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (sex_ != &::google::protobuf::internal::kEmptyString) {
    delete sex_;
  }
  if (race_ != &::google::protobuf::internal::kEmptyString) {
    delete race_;
  }
  if (birthday_ != &::google::protobuf::internal::kEmptyString) {
    delete birthday_;
  }
  if (native_ != &::google::protobuf::internal::kEmptyString) {
    delete native_;
  }
  if (school_name_ != &::google::protobuf::internal::kEmptyString) {
    delete school_name_;
  }
  if (this != default_instance_) {
  }
}

void sGetTeacherInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sGetTeacherInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sGetTeacherInfo_descriptor_;
}

const sGetTeacherInfo& sGetTeacherInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2fprotocol_2eproto();
  return *default_instance_;
}

sGetTeacherInfo* sGetTeacherInfo::default_instance_ = NULL;

sGetTeacherInfo* sGetTeacherInfo::New() const {
  return new sGetTeacherInfo;
}

void sGetTeacherInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_number()) {
      if (number_ != &::google::protobuf::internal::kEmptyString) {
        number_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_sex()) {
      if (sex_ != &::google::protobuf::internal::kEmptyString) {
        sex_->clear();
      }
    }
    if (has_race()) {
      if (race_ != &::google::protobuf::internal::kEmptyString) {
        race_->clear();
      }
    }
    if (has_birthday()) {
      if (birthday_ != &::google::protobuf::internal::kEmptyString) {
        birthday_->clear();
      }
    }
    if (has_native()) {
      if (native_ != &::google::protobuf::internal::kEmptyString) {
        native_->clear();
      }
    }
    if (has_school_name()) {
      if (school_name_ != &::google::protobuf::internal::kEmptyString) {
        school_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sGetTeacherInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_number;
        break;
      }

      // required string number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sex;
        break;
      }

      // required string sex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sex().data(), this->sex().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_race;
        break;
      }

      // required string race = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_race:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_race()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->race().data(), this->race().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_birthday;
        break;
      }

      // required string birthday = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->birthday().data(), this->birthday().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_native;
        break;
      }

      // required string native = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_native:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_native()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->native().data(), this->native().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_school_name;
        break;
      }

      // required string school_name = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_school_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_school_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->school_name().data(), this->school_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sGetTeacherInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->number(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  // required string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->sex(), output);
  }

  // required string race = 5;
  if (has_race()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race().data(), this->race().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->race(), output);
  }

  // required string birthday = 6;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->birthday(), output);
  }

  // required string native = 7;
  if (has_native()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->native().data(), this->native().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->native(), output);
  }

  // required string school_name = 8;
  if (has_school_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->school_name().data(), this->school_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->school_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sGetTeacherInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->number(), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sex(), target);
  }

  // required string race = 5;
  if (has_race()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->race().data(), this->race().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->race(), target);
  }

  // required string birthday = 6;
  if (has_birthday()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->birthday(), target);
  }

  // required string native = 7;
  if (has_native()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->native().data(), this->native().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->native(), target);
  }

  // required string school_name = 8;
  if (has_school_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->school_name().data(), this->school_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->school_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sGetTeacherInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required string number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sex());
    }

    // required string race = 5;
    if (has_race()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->race());
    }

    // required string birthday = 6;
    if (has_birthday()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->birthday());
    }

    // required string native = 7;
    if (has_native()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->native());
    }

    // required string school_name = 8;
    if (has_school_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->school_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sGetTeacherInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sGetTeacherInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sGetTeacherInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sGetTeacherInfo::MergeFrom(const sGetTeacherInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_race()) {
      set_race(from.race());
    }
    if (from.has_birthday()) {
      set_birthday(from.birthday());
    }
    if (from.has_native()) {
      set_native(from.native());
    }
    if (from.has_school_name()) {
      set_school_name(from.school_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sGetTeacherInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sGetTeacherInfo::CopyFrom(const sGetTeacherInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sGetTeacherInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void sGetTeacherInfo::Swap(sGetTeacherInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(number_, other->number_);
    std::swap(name_, other->name_);
    std::swap(sex_, other->sex_);
    std::swap(race_, other->race_);
    std::swap(birthday_, other->birthday_);
    std::swap(native_, other->native_);
    std::swap(school_name_, other->school_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sGetTeacherInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sGetTeacherInfo_descriptor_;
  metadata.reflection = sGetTeacherInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
